{"version":3,"sources":["../../node_modules/proj4/lib/constants/values.js","../../node_modules/proj4/lib/constants/PrimeMeridian.js","../../node_modules/proj4/lib/constants/units.js","../../node_modules/proj4/lib/match.js","../../node_modules/proj4/lib/projString.js","../../node_modules/wkt-parser/parser.js","../../node_modules/wkt-parser/process.js","../../node_modules/wkt-parser/index.js","../../node_modules/proj4/lib/defs.js","../../node_modules/proj4/lib/global.js","../../node_modules/proj4/lib/parseCode.js","../../node_modules/proj4/lib/extend.js","../../node_modules/proj4/lib/common/msfnz.js","../../node_modules/proj4/lib/common/sign.js","../../node_modules/proj4/lib/common/adjust_lon.js","../../node_modules/proj4/lib/common/tsfnz.js","../../node_modules/proj4/lib/common/phi2z.js","../../node_modules/proj4/lib/projections/longlat.js","../../node_modules/proj4/lib/projections.js","../../node_modules/proj4/lib/projections/merc.js","../../node_modules/proj4/lib/constants/Ellipsoid.js","../../node_modules/proj4/lib/constants/Datum.js","../../node_modules/proj4/lib/nadgrid.js","../../node_modules/proj4/lib/Proj.js","../../node_modules/proj4/lib/deriveConstants.js","../../node_modules/proj4/lib/datum.js","../../node_modules/proj4/lib/datumUtils.js","../../node_modules/proj4/lib/datum_transform.js","../../node_modules/proj4/lib/adjust_axis.js","../../node_modules/proj4/lib/common/toPoint.js","../../node_modules/proj4/lib/checkSanity.js","../../node_modules/proj4/lib/transform.js","../../node_modules/proj4/lib/core.js","../../node_modules/mgrs/mgrs.js","../../node_modules/proj4/lib/Point.js","../../node_modules/proj4/lib/common/pj_enfn.js","../../node_modules/proj4/lib/common/pj_mlfn.js","../../node_modules/proj4/lib/common/pj_inv_mlfn.js","../../node_modules/proj4/lib/projections/tmerc.js","../../node_modules/proj4/lib/common/sinh.js","../../node_modules/proj4/lib/common/hypot.js","../../node_modules/proj4/lib/common/asinhy.js","../../node_modules/proj4/lib/common/log1py.js","../../node_modules/proj4/lib/common/gatg.js","../../node_modules/proj4/lib/common/clens_cmplx.js","../../node_modules/proj4/lib/common/cosh.js","../../node_modules/proj4/lib/projections/etmerc.js","../../node_modules/proj4/lib/common/clens.js","../../node_modules/proj4/lib/projections/utm.js","../../node_modules/proj4/lib/common/adjust_zone.js","../../node_modules/proj4/lib/common/srat.js","../../node_modules/proj4/lib/projections/gauss.js","../../node_modules/proj4/lib/projections/sterea.js","../../node_modules/proj4/lib/projections/stere.js","../../node_modules/proj4/lib/projections/somerc.js","../../node_modules/proj4/lib/projections/omerc.js","../../node_modules/proj4/lib/projections/lcc.js","../../node_modules/proj4/lib/projections/krovak.js","../../node_modules/proj4/lib/common/mlfn.js","../../node_modules/proj4/lib/common/e0fn.js","../../node_modules/proj4/lib/common/e1fn.js","../../node_modules/proj4/lib/common/e2fn.js","../../node_modules/proj4/lib/common/e3fn.js","../../node_modules/proj4/lib/common/gN.js","../../node_modules/proj4/lib/common/adjust_lat.js","../../node_modules/proj4/lib/common/imlfn.js","../../node_modules/proj4/lib/projections/cass.js","../../node_modules/proj4/lib/common/qsfnz.js","../../node_modules/proj4/lib/projections/laea.js","../../node_modules/proj4/lib/common/asinz.js","../../node_modules/proj4/lib/projections/aea.js","../../node_modules/proj4/lib/projections/gnom.js","../../node_modules/proj4/lib/projections/cea.js","../../node_modules/proj4/lib/common/iqsfnz.js","../../node_modules/proj4/lib/projections/eqc.js","../../node_modules/proj4/lib/projections/poly.js","../../node_modules/proj4/lib/projections/nzmg.js","../../node_modules/proj4/lib/projections/mill.js","../../node_modules/proj4/lib/projections/sinu.js","../../node_modules/proj4/lib/projections/moll.js","../../node_modules/proj4/lib/projections/eqdc.js","../../node_modules/proj4/lib/projections/vandg.js","../../node_modules/proj4/lib/projections/aeqd.js","../../node_modules/proj4/lib/projections/ortho.js","../../node_modules/proj4/lib/projections/qsc.js","../../node_modules/proj4/lib/projections/robin.js","../../node_modules/proj4/lib/projections/geocent.js","../../node_modules/proj4/lib/projections/tpers.js","../../node_modules/proj4/lib/index.js","../../node_modules/proj4/projs.js","../../src/MapWrapper.tsx","../../src/MapFormField.tsx","ExampleForm.tsx","App.tsx","index.tsx"],"names":["SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","ft","to_meter","ignoredChar","match","obj","key","testkey","keys","Object","lkey","toLowerCase","replace","i","length","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","whitespace","latin","keyword","endThings","digets","Parser","text","Error","this","level","place","root","stack","currentObject","state","mapit","value","Array","isArray","unshift","thing","out","newObj","item","sExpr","shift","name","convert","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","output","d2r","input","wkt","lisp","type","projName","local","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","slice","sphere","ellps","TOWGS84","isFinite","forEach","outName","inName","rename","cleanWKT","defs","that","arguments","def","charAt","parseProj","apply","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","globals","codeWords","codes","parse","code","testObj","testDef","some","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","projStr","testProj","destination","source","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","identity","pt","projs","init","es","e","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","projStore","add","len","n","start","get","ellipseName","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","end","String","fromCharCode","Uint8Array","buffer","mapNodes","nodes","r","longitudeShift","latitudeShift","readGridHeader","offset","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","datumDef","Datum","sphere_","Ellipsoid","dc_sphere","ecc","a2","b2","ep2","dc_eccentricity","getNadgrids","datumObj","datum_type","grids","extend","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","checkParams","dest","point","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","Number","NaN","attemptedGrids","subgrid","subgrids","epsilon","del","minX","ll","minY","maxX","lim","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","inx","indx","floor","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","TypeError","transform","enforceAxis","toPoint","checkSanity","checkNotWGS","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","fromProj","toProj","coord","single","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","getLetter100kID","get100kID","encode","eccPrimeSquared","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","round","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","LetterDesignator","mgrsString","testChar","hunK","sb","substring","set","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","C04","C06","C08","en","sphi","cphi","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","j","hr","hi1","hr1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","adjust_zone","etmerc","dependsOn","esinp","rc","phic0","ratexp","K","srat","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","cosph0","F","H","L","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","projectionName","isTypeA","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","P00","P01","P02","P10","P11","P20","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","qsfnz","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","beta","authlat","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml1","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","FACE_ENUM","AREA_ENUM","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","NODES","poly3_val","coefs","f_df","max_err","iters","upd","newton_rapshon","poly3_der","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","defaultDatum","Proj","common","nadgrid","data","DataView","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","version","proj4","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","includedProjections","register","styles","mapInputWidget","position","height","width","display","gridTemplateRows","zIndex","mapContainer","gridRow","mapSubmitButton","MapWrapper","props","useState","defaultMapProjection","gjson","mapElement","useRef","mapRef","createMap","useCallback","center","geoTIFFSource","GeoTIFF","sources","url","geoTiff","convertToRGB","tileLayer","WebGLTile","viewOptions","View","projection","Tile","OSM","zoom","theMap","Map","target","layers","controls","addDrawInteraction","layer","Vector","style","Style","stroke","Stroke","color","image","Circle","radius","fill","Fill","draw","Draw","modify","Modify","parsedFeatures","dataProjection","featureProjection","extent","padding","maxZoom","setFeaturesLayer","useEffect","setMap","_jsxs","_jsx","ref","Button","variant","onClick","features","featuresLayer","geojFeatures","rightHanded","Geolocation","MapFormField","form","setCenter","showMap","featureType","drawnFeatures","callbackFn","theFeatures","setDrawnFeatures","setShowMap","field","className","label","ExampleForm","initialValues","polygon","gtlinestring","linestring","onSubmit","values","actions","setSubmitting","formProps","id","component","JSON","stringify","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4646f172.chunk.js","sourcesContent":["export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n}","/*\n * Copyright 2021 Macquarie University\n *\n * Licensed under the Apache License Version 2.0 (the, \"License\");\n * you may not use, this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied.\n * See, the License, for the specific language governing permissions and\n * limitations under the License.\n *\n * Filename: MapWrapper.tsx\n * Description:\n *   Internals of map generation for MapFormField\n */\nimport React, { useState, useEffect, useRef, useCallback } from 'react'\n\n// openlayers\nimport Map from 'ol/Map'\nimport View, { ViewOptions } from 'ol/View'\nimport TileLayer from 'ol/layer/Tile'\nimport WebGLTileLayer from 'ol/layer/WebGLTile'\nimport GeoTIFF from 'ol/source/GeoTIFF'\nimport VectorLayer from 'ol/layer/Vector'\nimport VectorSource from 'ol/source/Vector'\nimport { Circle as CircleStyle, Fill, Stroke, Style } from 'ol/style'\nimport { Draw, Modify } from 'ol/interaction'\nimport OSM from 'ol/source/OSM'\nimport { Feature } from 'ol'\nimport { transform } from 'ol/proj'\nimport proj4 from 'proj4';\nimport { register } from 'ol/proj/proj4'\n\nimport Button, { ButtonProps } from '@material-ui/core/Button'\nimport GeoJSON from 'ol/format/GeoJSON'\n\n\n// define some EPSG codes - these are for two sample images\n// TODO: we need to have a better way to include a useful set or allow \n// them to be defined by a project\n// e.g. https://www.npmjs.com/package/epsg-index\nproj4.defs('EPSG:32636', '+proj=utm +zone=36 +datum=WGS84 +units=m +no_defs')\nproj4.defs(\n  'EPSG:28354',\n  '+proj=utm +zone=54 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs'\n)\nregister(proj4)\n\n\ntype FeaturesType = Feature<any>[] | undefined\ninterface MapProps extends ButtonProps {\n  features: any\n  geoTiff?: string\n  projection?: string\n  featureType: 'Point' | 'Polygon' | 'LineString'\n  zoom: number\n  center: Array<number>\n  callbackFn: (features: FeaturesType) => void\n}\n\nconst styles = {\n  mapInputWidget: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100vh',\n    width: '100%',\n    display: 'grid',\n    gridTemplateRows: '1fr 100px',\n    zIndex: 100\n  },\n  mapContainer: {\n    gridRow: 1\n  },\n  mapSubmitButton: {\n    gridRow: 2\n  }\n} as const\n\nfunction MapWrapper(props: MapProps) {\n  // set intial state\n  const [map, setMap] = useState<Map | undefined>()\n  const [featuresLayer, setFeaturesLayer] =\n    useState<VectorLayer<VectorSource<any>>>()\n  const defaultMapProjection = 'EPSG:3857'\n  const gjson = new GeoJSON()\n\n  // pull refs\n  const mapElement = useRef<HTMLDivElement>(null)\n\n  // create state ref that can be accessed in OpenLayers onclick callback function\n  //  https://stackoverflow.com/a/60643670\n  const mapRef = useRef<Map | undefined>()\n  mapRef.current = map\n\n  const createMap = useCallback(\n    async (element: HTMLElement, props: MapProps): Promise<Map> => {\n      const center = transform(\n        props.center,\n        'EPSG:4326',\n        props.projection || defaultMapProjection\n      )\n      let tileLayer: TileLayer<any>\n      let view: View\n\n      if (props.geoTiff) {\n        const geoTIFFSource = new GeoTIFF({\n          sources: [\n            {\n              url: props.geoTiff\n            }\n          ],\n          convertToRGB: true\n        })\n        tileLayer = new WebGLTileLayer({ source: geoTIFFSource })\n        const viewOptions = await geoTIFFSource.getView()\n        // if the geoTiff doesn't have projection info we \n        // need to set it from the props or it will default to EPSG:3857\n        // can't see a way to test the geoTIFF image so we just set the\n        // projection if it has been passed in via the props\n        if (props.projection) {\n          view = new View({ ...viewOptions, projection: props.projection })\n        } else {\n          view = new View(viewOptions)\n        }\n      } else {\n        tileLayer = new TileLayer({ source: new OSM() })\n        view = new View({\n          projection: props.projection || defaultMapProjection,\n          center: center,\n          zoom: props.zoom\n        })\n      }\n\n      const theMap = new Map({\n        target: element,\n        layers: [tileLayer],\n        view: view,\n        controls: []\n      })\n\n      theMap.getView().setCenter(center)\n\n      return theMap\n    },\n    []\n  )\n\n  const addDrawInteraction = useCallback(\n    (map: Map, props: MapProps) => {\n      const source = new VectorSource()\n\n      const layer = new VectorLayer({\n        source: source,\n        style: new Style({\n          stroke: new Stroke({\n            color: '#33ff33',\n            width: 4\n          }),\n          image: new CircleStyle({\n            radius: 7,\n            fill: new Fill({ color: '#33ff33' })\n          })\n        })\n      })\n      const draw = new Draw({\n        source: source,\n        type: props.featureType || 'Point'\n      })\n      const modify = new Modify({\n        source: source\n      })\n\n      // add features to map if we're passed any in\n      if (props.features && props.features.type) {\n        const parsedFeatures = gjson.readFeatures(props.features, {\n          dataProjection: 'EPSG:4326',\n          featureProjection: map.getView().getProjection()\n        })\n        source.addFeatures(parsedFeatures)\n\n        // set the view so that we can see the features\n        // but don't zoom too much\n        const extent = source.getExtent()\n        // don't fit if the extent is infinite because it crashes\n        if (!extent.includes(Infinity)) {\n          map\n            .getView()\n            .fit(extent, { padding: [20, 20, 20, 20], maxZoom: props.zoom })\n        }\n      }\n\n      // setDrawInteraction(draw)\n\n      map.addLayer(layer)\n      map.addInteraction(draw)\n      map.addInteraction(modify)\n      setFeaturesLayer(layer)\n\n      draw.on('drawstart', () => {\n        // clear any existing features if we start drawing again\n        // could allow up to a fixed number of features\n        // here by counting\n        source.clear()\n      })\n    },\n    [setFeaturesLayer]\n  )\n\n  // initialize map on first render\n  useEffect(() => {\n    // don't do this if we have already made a map\n    if (!map) {\n      // create and add vector source layer containing the passed in features\n      if (mapElement.current) {\n        // create map\n        createMap(mapElement.current, props).then((theMap: Map) => {\n          addDrawInteraction(theMap, props)\n          setMap(theMap)\n        })\n      }\n    }\n  }, [map, createMap, addDrawInteraction, props])\n\n  const submitAction = () => {\n    if (featuresLayer) {\n      const features = featuresLayer.getSource().getFeatures()\n\n      if (map) {\n        const geojFeatures = gjson.writeFeaturesObject(features, {\n          featureProjection: map.getView().getProjection(),\n          dataProjection: 'EPSG:4326',\n          rightHanded: true\n        })\n\n        props.callbackFn(geojFeatures)\n        featuresLayer.getSource().clear()\n      }\n    }\n  }\n\n  // render component\n  return (\n    <div style={styles.mapInputWidget}>\n      <div ref={mapElement} style={styles.mapContainer} />\n      <Button\n        type='button'\n        variant='outlined'\n        color='primary'\n        style={styles.mapSubmitButton}\n        onClick={submitAction}\n      >\n        Submit\n      </Button>\n    </div>\n  )\n}\n\nexport default MapWrapper\n","/*\n * Copyright 2021 Macquarie University\n *\n * Licensed under the Apache License Version 2.0 (the, \"License\");\n * you may not use, this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing software\n * distributed under the License is distributed on an \"AS IS\" BASIS\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied.\n * See, the License, for the specific language governing permissions and\n * limitations under the License.\n *\n * Filename: MapFormField.tsx\n * Description:\n *   Implement MapFormField for entry of data via maps in FAIMS\n */\n\nimport React, { useState } from 'react'\nimport Feature from 'ol/Feature'\nimport './MapFormField.css'\nimport MapWrapper from './MapWrapper'\nimport Button from '@material-ui/core/Button'\nimport { FieldProps } from 'formik'\n\nimport { Plugins } from '@capacitor/core'\nconst { Geolocation } = Plugins\n\ninterface MapFieldProps extends FieldProps {\n  label?: string\n  featureType: 'Point' | 'Polygon' | 'LineString'\n  geoTiff?: string\n  projection?: string\n  center?: Array<number>\n  zoom?: number\n}\n\nfunction MapFormField({ field, form, ...props }: MapFieldProps) {\n  const [showMap, setShowMap] = useState(false)\n  const [drawnFeatures, setDrawnFeatures] = useState<Array<Feature<any>>>([])\n\n\n  // default props.center if not defined\n  if (!props.center) {\n    props.center = [0, 0]\n  }\n  const [center, setCenter] = useState(props.center)\n\n  if (!props.zoom) {\n    props.zoom = 14\n  }\n\n  if (!props.label) {\n    props.label = `Get ${props.featureType}`\n  }\n\n  const mapCallback = (theFeatures: any) => {\n    setDrawnFeatures(theFeatures)\n    setShowMap(false)\n\n    form.setFieldValue(field.name, theFeatures)\n  }\n\n  // get the current GPS location if we're about to show the map and \n  // we have a default location\n  if (showMap) {\n    if (center[0] === 0 && center[1] === 0) {\n      Geolocation.getCurrentPosition().then((result) => {\n        setCenter([result.coords.longitude, result.coords.latitude])\n      })\n    }\n  }\n\n  // only show the map if we have a center\n  if (showMap && center[0] !== 0 && center[1] !== 0) {\n    //window.scrollTo(0, 0)\n    return (\n      <div>\n        <MapWrapper\n          featureType={props.featureType}\n          features={drawnFeatures}\n          zoom={props.zoom}\n          center={center}\n          callbackFn={mapCallback}\n          geoTiff={props.geoTiff}\n          projection={props.projection}\n        />\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <Button\n          variant='contained'\n          className='map-button'\n          onClick={() => setShowMap(true)}\n        >\n          {props.label}\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport { MapFormField }\n","// @ts-ignore\nimport React from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport {MapFormField} from 'faims3-map-input'\nimport Button from '@material-ui/core/Button'\nimport './ExampleForm.css'\n\nconst ExampleForm = () => {\n\n  const center = [151.21409960967713,-33.85543752567224]\n  const geoTiffNoProjection = '/tif1.tif'\n  const geoTiffProjection = 'EPSG:28354'\n  const geoTiffURL = 'https://sentinel-cogs.s3.us-west-2.amazonaws.com/sentinel-s2-l2a-cogs/2020/S2A_36QWD_20200701_0_L2A/TCI.tif'\n\n  return (\n      <Formik\n        initialValues={{ point: {}, polygon: {}, gtlinestring: {}, linestring: {} }}\n\n        onSubmit={(values: any, actions: any) => {\n            console.log(values)\n            actions.setSubmitting(false)\n        }}\n      >\n        {(formProps) => (\n          <div id=\"demoformcontainer\">\n            <div id=\"theform\">\n                  <h1>Test Form</h1>\n          <Form>\n            <Field name=\"point\" center={center} featureType=\"Point\" component={MapFormField} />\n\n            <Field name=\"polygon\" \n                label=\"Polygon GeoTiff no Projection\"\n                geoTiff={geoTiffNoProjection}\n                projection={geoTiffProjection}\n                featureType=\"Polygon\" \n                component={MapFormField} />\n\n            <Field name=\"linestring\"  featureType=\"LineString\" component={MapFormField} />\n\n            <Field name=\"gtlinestring\" \n                   label=\"Get Linestring with Geotiff\" \n                   geoTiff={geoTiffURL}\n                   center={center}\n                   featureType=\"LineString\" component={MapFormField} />\n\n            <Button variant='contained' color='primary' type=\"submit\">Submit</Button>\n          </Form>\n\n            </div>\n              <div id=\"formvaluedisplay\">\n                <pre>\n                {JSON.stringify(formProps.values, null, 2)}\n                </pre>\n              </div>\n              </div>\n        )}\n      </Formik>\n)\n};\n\n\nexport default ExampleForm;","// @ts-ignore\nimport React from 'react'; \nimport './App.css';\nimport ExampleForm from './ExampleForm';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <ExampleForm />\n    </div>\n  )\n}\n\nexport default App;","import './index.css'\n\n// @ts-ignore\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}